name: Release

on:
  push:
    branches:
      # content after first / is the to build version number
      - 'release/**'

jobs:
  build:
    name: Build Python Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Check Python version
        run: python -c "import sys; print(sys.version)"

      - name: Build package
        run: |
          python -m pip install --upgrade pip build wheel
          python -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4.2.0
        with:
          name: python-package-distributions
          path: dist/

      - name: Store the changelog.md
        uses: actions/upload-artifact@v4.2.0
        with:
          name: changelog
          path: changelog.md

  publish-to-pypi:
    name: Publish to pypi
    runs-on: ubuntu-latest
    needs: [ 'build' ]
    permissions:
      id-token: write

    steps:
      - name: Download the stored distribution packages
        uses: actions/download-artifact@v4.1.1
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution packages to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.__TOKEN_GITHUB_ACTIONS__ }}

  release-to-github:
    name: Release the python packages to github
    runs-on: ubuntu-latest
    needs: [ 'build' ]
    permissions:
      contents: write
      id-token: write
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Download the stored distribution packages
        uses: actions/download-artifact@v4.1.1
        with:
          name: python-package-distributions
          path: dist/

      - name: Download the stored changelog
        uses: actions/download-artifact@v4.1.1
        with:
          name: changelog
          path: changelog.md

      - name: Create GitHub Release
        run: |
          github_ref_name="${{ github.ref_name }}" && tag_name="${github_ref_name#*/}" || exit 1
          echo "tag_name=${tag_name}"
          pwd
          ls -l 
          gh release create "${tag_name}" --repo "${{ github.repository }}" --notes-file "changelog.md"

      - name: Upload artifact signatures to GitHub Release
        run: >-
          github_ref_name="${{ github.ref_name }}" && tag_name="${github_ref_name#*/}" || exit 1
          echo "tag_name=${tag_name}" 
          gh release upload "${tag_name}" dist/* --repo '${{ github.repository }}'